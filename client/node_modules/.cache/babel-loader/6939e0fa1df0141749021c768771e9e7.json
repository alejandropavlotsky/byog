{"ast":null,"code":"var _jsxFileName = \"/Users/alejandromurawczik/Movies/Programacion/ IronHack/Ironhack/week7/day5/BYOG/client/src/components/pages/coaster-list/CoasterList.js\";\nimport React, { Component } from 'react';\nimport CoasterService from '../../../service/coasters.service';\nimport './CoastersList.css';\nimport CoasterCard from './CoasterCard';\nimport CoasterForm from './../coaster-form/CoasterForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\n\nclass CoasterList extends Component {\n  constructor() {\n    super();\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getAllCoasters = () => {\n      this.coasterService.getCoasters().then(response => this.setState({\n        coasters: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.componentDidMount = () => {\n      this.getAllCoasters();\n    };\n\n    this.finishCoasterPost = () => {\n      this.getAllCoasters();\n      this.handleModal(false);\n      this.handletoast(true, 'Registro creado en BBDD');\n    };\n\n    this.state = {\n      modalShow: false,\n      toast: {\n        show: false,\n        text: ''\n      },\n      coasters: []\n    };\n    this.coasterService = new CoasterService();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Listado de monta\\xF1as rusas\"), this.props.loggedInUser && /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    }, \"Crear nueva monta\\xF1a rusa\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"coasters-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, this.state.coasters.map(elm => /*#__PURE__*/React.createElement(CoasterCard, Object.assign({\n      key: elm._id\n    }, elm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CoasterForm, {\n      finishCoasterPost: this.finishCoasterPost,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      autohide: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"holder.js/20x20?text=%20\",\n      className: \"rounded mr-2\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Mensaje\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, this.state.toast.text)));\n  }\n\n}\n\nexport default CoasterList;","map":{"version":3,"sources":["/Users/alejandromurawczik/Movies/Programacion/ IronHack/Ironhack/week7/day5/BYOG/client/src/components/pages/coaster-list/CoasterList.js"],"names":["React","Component","CoasterService","CoasterCard","CoasterForm","Container","Row","Button","Toast","Modal","CoasterList","constructor","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getAllCoasters","coasterService","getCoasters","then","response","coasters","data","catch","err","console","log","componentDidMount","finishCoasterPost","render","props","loggedInUser","marginBottom","map","elm","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CoasterService from '../../../service/coasters.service'\n\nimport './CoastersList.css'\n\nimport CoasterCard from './CoasterCard'\nimport CoasterForm from './../coaster-form/CoasterForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\n\nclass CoasterList extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            modalShow: false,\n            toast: {\n                show: false,\n                text: ''\n            },\n            coasters: []\n        }\n        this.coasterService = new CoasterService()\n    }\n\n\n    handleModal = visible => this.setState({ modalShow: visible })\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getAllCoasters = () => {\n        this.coasterService.getCoasters()\n            .then(response => this.setState({ coasters: response.data }))\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        this.getAllCoasters()\n    }\n\n\n    finishCoasterPost = () => {\n        this.getAllCoasters()\n        this.handleModal(false)\n        this.handletoast(true, 'Registro creado en BBDD')\n    }\n\n    render() {\n        return (\n            <Container as=\"section\">\n\n                <h1>Listado de montañas rusas</h1>\n\n                {this.props.loggedInUser && <Button onClick={() => this.handleModal(true)} variant=\"dark\" style={{ marginBottom: '20px' }}>Crear nueva montaña rusa</Button>}\n\n                <Row className=\"coasters-list\">\n                    {this.state.coasters.map(elm => <CoasterCard key={elm._id} {...elm} />)}\n                </Row>\n\n\n                <Modal show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <CoasterForm finishCoasterPost={this.finishCoasterPost} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n\n                <Toast onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} autohide>\n                    <Toast.Header>\n                        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n\n\n            </Container>\n        )\n    }\n}\n\nexport default CoasterList"]},"metadata":{},"sourceType":"module"}