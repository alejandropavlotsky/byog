{"ast":null,"code":"var _jsxFileName = \"/Users/alejandromurawczik/Movies/Programacion/ IronHack/Ironhack/week7/day5/BYOG/client/src/components/pages/eventList/EventList.js\";\nimport React, { Component } from 'react';\nimport EventService from './../../../service/events.service';\nimport './EventList.css';\nimport EventCard from '../eventCard/EventCard';\nimport EventForm from '../eventForm/EventForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\n\nclass EventsList extends Component {\n  constructor() {\n    super();\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handleToast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getAllEvents = () => {\n      this.eventService.getEvents().then(response => console.log(response));\n    };\n\n    this.componentDidMount = () => {\n      this.getAllEvents();\n    };\n\n    this.finishEventPost = () => {\n      this.getAllEvents();\n      this.handleModal(false);\n      this.handleToast(true, 'Registro creado en la BBDD');\n    };\n\n    this.state = {\n      modalShow: false,\n      toast: {\n        show: false,\n        text: ''\n      },\n      events: []\n    };\n    this.eventService = new EventService();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Listado de Eventos\"), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 4,\n        offset: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, this.props.loggedInUser && /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"success\",\n      block: true,\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 49\n      }\n    }, \"Crear nuevo evento\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"events-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, this.state.events.map(elm => /*#__PURE__*/React.createElement(EventCard, Object.assign({\n      key: elm._id\n    }, elm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 51\n      }\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(EventForm, {\n      loggedInUser: this.props.loggedInUser,\n      finishEventPost: this.finishEventPost,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handleToast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      autohide: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"holder.js/20x20?text=%20\",\n      className: \"rounded\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default EventsList;","map":{"version":3,"sources":["/Users/alejandromurawczik/Movies/Programacion/ IronHack/Ironhack/week7/day5/BYOG/client/src/components/pages/eventList/EventList.js"],"names":["React","Component","EventService","EventCard","EventForm","Container","Row","Button","Toast","Modal","Col","EventsList","constructor","handleModal","visible","setState","modalShow","handleToast","text","toastCopy","state","toast","show","getAllEvents","eventService","getEvents","then","response","console","log","componentDidMount","finishEventPost","events","render","span","offset","props","loggedInUser","marginBottom","map","elm","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport EventService from './../../../service/events.service'\n\nimport './EventList.css'\n\nimport EventCard from '../eventCard/EventCard'\nimport EventForm from '../eventForm/EventForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\nimport Col from 'react-bootstrap/Col'\n\nclass EventsList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            modalShow: false,\n            toast: {\n                show: false,\n                text: ''\n            },\n            events: []\n        }\n        this.eventService = new EventService()\n    }\n\n\n    handleModal = visible => this.setState({ modalShow: visible })\n    handleToast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getAllEvents = () => {\n        this.eventService.getEvents()\n            .then(response => console.log(response))\n    }\n\n    componentDidMount = () => {\n        this.getAllEvents()\n    }\n\n    finishEventPost = () => {\n        this.getAllEvents()\n        this.handleModal(false)\n        this.handleToast(true, 'Registro creado en la BBDD')\n    }\n\n\n    render() {\n        return (\n            <Container as=\"section\">\n                <h1>Listado de Eventos</h1>\n                <Col md={{ span: 4, offset: 4 }}>\n                    {this.props.loggedInUser && <Button onClick={() => this.handleModal(true)} variant=\"success\" block style={{ marginBottom: '20px' }}>Crear nuevo evento</Button>}\n                </Col>\n\n                <Row className=\"events-list\">\n                    {this.state.events.map(elm => <EventCard key={elm._id} {...elm}/>)}\n            </Row>\n\n                <Modal show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <EventForm loggedInUser={this.props.loggedInUser} finishEventPost={this.finishEventPost} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n                <Toast onClose={() => this.handleToast(false)} show={this.state.toast.show} delay={3000} autohide>\n                    <Toast.Header>\n                        <img src=\"holder.js/20x20?text=%20\" className=\"rounded\" alt=\"\"/>\n                    </Toast.Header>\n                </Toast>\n            </Container>\n        )\n    }\n}\nexport default EventsList"]},"metadata":{},"sourceType":"module"}